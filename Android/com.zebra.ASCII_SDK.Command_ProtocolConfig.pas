//
// Generated by JavaToPas v1.5 20170214 - 172215
////////////////////////////////////////////////////////////////////////////////
unit com.zebra.ASCII_SDK.Command_ProtocolConfig;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  com.zebra.ASCII_SDK.COMMAND_TYPE;

type
  JCommand_ProtocolConfig = interface;

  JCommand_ProtocolConfigClass = interface(JObjectClass)
    ['{DB763454-4B4D-476A-A635-934390377488}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function _GetcommandName : JString; cdecl;                                  //  A: $19
    function getCommandType : JCOMMAND_TYPE; cdecl;                             // ()Lcom/zebra/ASCII_SDK/COMMAND_TYPE; A: $1
    function getDebugLevel : Byte; cdecl;                                       // ()B A: $1
    function getDisableDebug : boolean; cdecl;                                  // ()Z A: $1
    function getEchoOff : boolean; cdecl;                                       // ()Z A: $1
    function getEchoOn : boolean; cdecl;                                        // ()Z A: $1
    function getEnableDebug : boolean; cdecl;                                   // ()Z A: $1
    function getExcBatchmodeEventNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcBatteryEventNotify : boolean; cdecl;                         // ()Z A: $1
    function getExcCRC : boolean; cdecl;                                        // ()Z A: $1
    function getExcDatabaseEventNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcInvEndSummaryNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcOperEndSummaryNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcPowerEventNotify : boolean; cdecl;                           // ()Z A: $1
    function getExcRadioerrorEventNotify : boolean; cdecl;                      // ()Z A: $1
    function getExcStartOperationNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcStopoperationNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcTemperatureEventNotify : boolean; cdecl;                     // ()Z A: $1
    function getExctriggereventnotify : boolean; cdecl;                         // ()Z A: $1
    function getIncBatchmodeEventNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncBatteryEventNotify : boolean; cdecl;                         // ()Z A: $1
    function getIncCRC : boolean; cdecl;                                        // ()Z A: $1
    function getIncDatabaseEventNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncInvEndSummaryNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncOperEndSummaryNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncPowerEventNotify : boolean; cdecl;                           // ()Z A: $1
    function getIncRadioerrorEventNotify : boolean; cdecl;                      // ()Z A: $1
    function getIncStartOperationNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncStopOperationNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncTemperatureEventNotify : boolean; cdecl;                     // ()Z A: $1
    function getInctriggereventnotify : boolean; cdecl;                         // ()Z A: $1
    function init : JCommand_ProtocolConfig; cdecl;                             // ()V A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure setDebugLevel(value : Byte) ; cdecl;                              // (B)V A: $1
    procedure setDisableDebug(value : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setEchoOff(value : boolean) ; cdecl;                              // (Z)V A: $1
    procedure setEchoOn(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setEnableDebug(value : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setExcBatchmodeEventNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcBatteryEventNotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setExcCRC(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setExcDatabaseEventNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcInvEndSummaryNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcOperEndSummaryNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcPowerEventNotify(value : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setExcRadioerrorEventNotify(value : boolean) ; cdecl;             // (Z)V A: $1
    procedure setExcStartOperationNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcStopoperationNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcTemperatureEventNotify(value : boolean) ; cdecl;            // (Z)V A: $1
    procedure setExctriggereventnotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setIncBatchmodeEventNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncBatteryEventNotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setIncCRC(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setIncDatabaseEventNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncInvEndSummaryNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncOperEndSummaryNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncPowerEventNotify(value : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setIncRadioerrorEventNotify(value : boolean) ; cdecl;             // (Z)V A: $1
    procedure setIncStartOperationNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncStopOperationNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncTemperatureEventNotify(value : boolean) ; cdecl;            // (Z)V A: $1
    procedure setInctriggereventnotify(value : boolean) ; cdecl;                // (Z)V A: $1
    property commandName : JString read _GetcommandName;                        // Ljava/lang/String; A: $19
  end;

  [JavaSignature('com/zebra/ASCII_SDK/Command_ProtocolConfig')]
  JCommand_ProtocolConfig = interface(JObject)
    ['{456BE1C7-6886-4C85-A927-EEDBCD0ACF46}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getCommandType : JCOMMAND_TYPE; cdecl;                             // ()Lcom/zebra/ASCII_SDK/COMMAND_TYPE; A: $1
    function getDebugLevel : Byte; cdecl;                                       // ()B A: $1
    function getDisableDebug : boolean; cdecl;                                  // ()Z A: $1
    function getEchoOff : boolean; cdecl;                                       // ()Z A: $1
    function getEchoOn : boolean; cdecl;                                        // ()Z A: $1
    function getEnableDebug : boolean; cdecl;                                   // ()Z A: $1
    function getExcBatchmodeEventNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcBatteryEventNotify : boolean; cdecl;                         // ()Z A: $1
    function getExcCRC : boolean; cdecl;                                        // ()Z A: $1
    function getExcDatabaseEventNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcInvEndSummaryNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcOperEndSummaryNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcPowerEventNotify : boolean; cdecl;                           // ()Z A: $1
    function getExcRadioerrorEventNotify : boolean; cdecl;                      // ()Z A: $1
    function getExcStartOperationNotify : boolean; cdecl;                       // ()Z A: $1
    function getExcStopoperationNotify : boolean; cdecl;                        // ()Z A: $1
    function getExcTemperatureEventNotify : boolean; cdecl;                     // ()Z A: $1
    function getExctriggereventnotify : boolean; cdecl;                         // ()Z A: $1
    function getIncBatchmodeEventNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncBatteryEventNotify : boolean; cdecl;                         // ()Z A: $1
    function getIncCRC : boolean; cdecl;                                        // ()Z A: $1
    function getIncDatabaseEventNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncInvEndSummaryNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncOperEndSummaryNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncPowerEventNotify : boolean; cdecl;                           // ()Z A: $1
    function getIncRadioerrorEventNotify : boolean; cdecl;                      // ()Z A: $1
    function getIncStartOperationNotify : boolean; cdecl;                       // ()Z A: $1
    function getIncStopOperationNotify : boolean; cdecl;                        // ()Z A: $1
    function getIncTemperatureEventNotify : boolean; cdecl;                     // ()Z A: $1
    function getInctriggereventnotify : boolean; cdecl;                         // ()Z A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure setDebugLevel(value : Byte) ; cdecl;                              // (B)V A: $1
    procedure setDisableDebug(value : boolean) ; cdecl;                         // (Z)V A: $1
    procedure setEchoOff(value : boolean) ; cdecl;                              // (Z)V A: $1
    procedure setEchoOn(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setEnableDebug(value : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setExcBatchmodeEventNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcBatteryEventNotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setExcCRC(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setExcDatabaseEventNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcInvEndSummaryNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcOperEndSummaryNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcPowerEventNotify(value : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setExcRadioerrorEventNotify(value : boolean) ; cdecl;             // (Z)V A: $1
    procedure setExcStartOperationNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setExcStopoperationNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setExcTemperatureEventNotify(value : boolean) ; cdecl;            // (Z)V A: $1
    procedure setExctriggereventnotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setIncBatchmodeEventNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncBatteryEventNotify(value : boolean) ; cdecl;                // (Z)V A: $1
    procedure setIncCRC(value : boolean) ; cdecl;                               // (Z)V A: $1
    procedure setIncDatabaseEventNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncInvEndSummaryNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncOperEndSummaryNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncPowerEventNotify(value : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setIncRadioerrorEventNotify(value : boolean) ; cdecl;             // (Z)V A: $1
    procedure setIncStartOperationNotify(value : boolean) ; cdecl;              // (Z)V A: $1
    procedure setIncStopOperationNotify(value : boolean) ; cdecl;               // (Z)V A: $1
    procedure setIncTemperatureEventNotify(value : boolean) ; cdecl;            // (Z)V A: $1
    procedure setInctriggereventnotify(value : boolean) ; cdecl;                // (Z)V A: $1
  end;

  TJCommand_ProtocolConfig = class(TJavaGenericImport<JCommand_ProtocolConfigClass, JCommand_ProtocolConfig>)
  end;

const
  TJCommand_ProtocolConfigcommandName = 'ProtocolConfig';

implementation

end.
