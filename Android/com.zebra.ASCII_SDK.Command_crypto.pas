//
// Generated by JavaToPas v1.5 20170214 - 172214
////////////////////////////////////////////////////////////////////////////////
unit com.zebra.ASCII_SDK.Command_crypto;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  com.zebra.ASCII_SDK.Param_ReportConfig,
  com.zebra.ASCII_SDK.Param_AccessConfig,
  com.zebra.ASCII_SDK.COMMAND_TYPE;

type
  JCommand_crypto = interface;

  JCommand_cryptoClass = interface(JObjectClass)
    ['{38194865-C21C-4725-BF7C-CC3B036CD807}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function _GetAccessConfig : JParam_AccessConfig; cdecl;                     //  A: $1
    function _GetReportConfig : JParam_ReportConfig; cdecl;                     //  A: $1
    function _GetcommandName : JString; cdecl;                                  //  A: $19
    function getChallenge : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getCommandType : JCOMMAND_TYPE; cdecl;                             // ()Lcom/zebra/ASCII_SDK/COMMAND_TYPE; A: $1
    function getCriteriaIndex : SmallInt; cdecl;                                // ()S A: $1
    function getExcCustom : boolean; cdecl;                                     // ()Z A: $1
    function getIncCustom : boolean; cdecl;                                     // ()Z A: $1
    function getKeyId : Integer; cdecl;                                         // ()I A: $1
    function getOffset : Integer; cdecl;                                        // ()I A: $1
    function getPassword : Int64; cdecl;                                        // ()J A: $1
    function getProfile : Integer; cdecl;                                       // ()I A: $1
    function getProtMode : Integer; cdecl;                                      // ()I A: $1
    function getbc : Integer; cdecl;                                            // ()I A: $1
    function init : JCommand_crypto; cdecl;                                     // ()V A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure _SetAccessConfig(Value : JParam_AccessConfig) ; cdecl;            //  A: $1
    procedure _SetReportConfig(Value : JParam_ReportConfig) ; cdecl;            //  A: $1
    procedure setChallenge(value : JString) ; cdecl;                            // (Ljava/lang/String;)V A: $1
    procedure setCriteriaIndex(value : SmallInt) ; cdecl;                       // (S)V A: $1
    procedure setExcCustom(value : boolean) ; cdecl;                            // (Z)V A: $1
    procedure setIncCustom(value : boolean) ; cdecl;                            // (Z)V A: $1
    procedure setKeyId(value : Integer) ; cdecl;                                // (I)V A: $1
    procedure setOffset(value : Integer) ; cdecl;                               // (I)V A: $1
    procedure setPassword(value : Int64) ; cdecl;                               // (J)V A: $1
    procedure setProfile(value : Integer) ; cdecl;                              // (I)V A: $1
    procedure setProtMode(value : Integer) ; cdecl;                             // (I)V A: $1
    procedure setbc(value : Integer) ; cdecl;                                   // (I)V A: $1
    property AccessConfig : JParam_AccessConfig read _GetAccessConfig write _SetAccessConfig;// Lcom/zebra/ASCII_SDK/Param_AccessConfig; A: $1
    property ReportConfig : JParam_ReportConfig read _GetReportConfig write _SetReportConfig;// Lcom/zebra/ASCII_SDK/Param_ReportConfig; A: $1
    property commandName : JString read _GetcommandName;                        // Ljava/lang/String; A: $19
  end;

  [JavaSignature('com/zebra/ASCII_SDK/Command_crypto')]
  JCommand_crypto = interface(JObject)
    ['{20E0265C-5BD7-4187-86CF-048C67F457BD}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function _GetAccessConfig : JParam_AccessConfig; cdecl;                     //  A: $1
    function _GetReportConfig : JParam_ReportConfig; cdecl;                     //  A: $1
    function getChallenge : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getCommandType : JCOMMAND_TYPE; cdecl;                             // ()Lcom/zebra/ASCII_SDK/COMMAND_TYPE; A: $1
    function getCriteriaIndex : SmallInt; cdecl;                                // ()S A: $1
    function getExcCustom : boolean; cdecl;                                     // ()Z A: $1
    function getIncCustom : boolean; cdecl;                                     // ()Z A: $1
    function getKeyId : Integer; cdecl;                                         // ()I A: $1
    function getOffset : Integer; cdecl;                                        // ()I A: $1
    function getPassword : Int64; cdecl;                                        // ()J A: $1
    function getProfile : Integer; cdecl;                                       // ()I A: $1
    function getProtMode : Integer; cdecl;                                      // ()I A: $1
    function getbc : Integer; cdecl;                                            // ()I A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure _SetAccessConfig(Value : JParam_AccessConfig) ; cdecl;            //  A: $1
    procedure _SetReportConfig(Value : JParam_ReportConfig) ; cdecl;            //  A: $1
    procedure setChallenge(value : JString) ; cdecl;                            // (Ljava/lang/String;)V A: $1
    procedure setCriteriaIndex(value : SmallInt) ; cdecl;                       // (S)V A: $1
    procedure setExcCustom(value : boolean) ; cdecl;                            // (Z)V A: $1
    procedure setIncCustom(value : boolean) ; cdecl;                            // (Z)V A: $1
    procedure setKeyId(value : Integer) ; cdecl;                                // (I)V A: $1
    procedure setOffset(value : Integer) ; cdecl;                               // (I)V A: $1
    procedure setPassword(value : Int64) ; cdecl;                               // (J)V A: $1
    procedure setProfile(value : Integer) ; cdecl;                              // (I)V A: $1
    procedure setProtMode(value : Integer) ; cdecl;                             // (I)V A: $1
    procedure setbc(value : Integer) ; cdecl;                                   // (I)V A: $1
    property AccessConfig : JParam_AccessConfig read _GetAccessConfig write _SetAccessConfig;// Lcom/zebra/ASCII_SDK/Param_AccessConfig; A: $1
    property ReportConfig : JParam_ReportConfig read _GetReportConfig write _SetReportConfig;// Lcom/zebra/ASCII_SDK/Param_ReportConfig; A: $1
  end;

  TJCommand_crypto = class(TJavaGenericImport<JCommand_cryptoClass, JCommand_crypto>)
  end;

const
  TJCommand_cryptocommandName = 'crypto';

implementation

end.
