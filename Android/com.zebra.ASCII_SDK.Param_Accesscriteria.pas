//
// Generated by JavaToPas v1.5 20170214 - 172217
////////////////////////////////////////////////////////////////////////////////
unit com.zebra.ASCII_SDK.Param_Accesscriteria;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  com.zebra.ASCII_SDK.ENUM_MEMORY_BANK;

type
  JParam_Accesscriteria = interface;

  JParam_AccesscriteriaClass = interface(JObjectClass)
    ['{65A00610-252B-48F7-A265-3B70D85DAA07}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function _GetcommandName : JString; cdecl;                                  //  A: $19
    function getfilter1data : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter1domatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter1mask : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter1maskbank : JENUM_MEMORY_BANK; cdecl;                     // ()Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK; A: $1
    function getfilter1maskstartpos : SmallInt; cdecl;                          // ()S A: $1
    function getfilter1matchlength : SmallInt; cdecl;                           // ()S A: $1
    function getfilter1nomatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter2data : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter2domatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter2mask : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter2maskbank : JENUM_MEMORY_BANK; cdecl;                     // ()Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK; A: $1
    function getfilter2maskstartpos : SmallInt; cdecl;                          // ()S A: $1
    function getfilter2matchlength : SmallInt; cdecl;                           // ()S A: $1
    function getfilter2nomatch : boolean; cdecl;                                // ()Z A: $1
    function init : JParam_Accesscriteria; cdecl;                               // ()V A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure setfilter1data(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter1domatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter1mask(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter1maskbank(value : JENUM_MEMORY_BANK) ; cdecl;            // (Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK;)V A: $1
    procedure setfilter1maskstartpos(value : SmallInt) ; cdecl;                 // (S)V A: $1
    procedure setfilter1matchlength(value : SmallInt) ; cdecl;                  // (S)V A: $1
    procedure setfilter1nomatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter2data(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter2domatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter2mask(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter2maskbank(value : JENUM_MEMORY_BANK) ; cdecl;            // (Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK;)V A: $1
    procedure setfilter2maskstartpos(value : SmallInt) ; cdecl;                 // (S)V A: $1
    procedure setfilter2matchlength(value : SmallInt) ; cdecl;                  // (S)V A: $1
    procedure setfilter2nomatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    property commandName : JString read _GetcommandName;                        // Ljava/lang/String; A: $19
  end;

  [JavaSignature('com/zebra/ASCII_SDK/Param_Accesscriteria')]
  JParam_Accesscriteria = interface(JObject)
    ['{93EB580D-C198-4E83-B421-E913EC06F0E0}']
    function ToString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getfilter1data : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter1domatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter1mask : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter1maskbank : JENUM_MEMORY_BANK; cdecl;                     // ()Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK; A: $1
    function getfilter1maskstartpos : SmallInt; cdecl;                          // ()S A: $1
    function getfilter1matchlength : SmallInt; cdecl;                           // ()S A: $1
    function getfilter1nomatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter2data : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter2domatch : boolean; cdecl;                                // ()Z A: $1
    function getfilter2mask : TJavaArray<Byte>; cdecl;                          // ()[B A: $1
    function getfilter2maskbank : JENUM_MEMORY_BANK; cdecl;                     // ()Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK; A: $1
    function getfilter2maskstartpos : SmallInt; cdecl;                          // ()S A: $1
    function getfilter2matchlength : SmallInt; cdecl;                           // ()S A: $1
    function getfilter2nomatch : boolean; cdecl;                                // ()Z A: $1
    procedure FromString(str : JString) ; cdecl;                                // (Ljava/lang/String;)V A: $1
    procedure setfilter1data(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter1domatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter1mask(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter1maskbank(value : JENUM_MEMORY_BANK) ; cdecl;            // (Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK;)V A: $1
    procedure setfilter1maskstartpos(value : SmallInt) ; cdecl;                 // (S)V A: $1
    procedure setfilter1matchlength(value : SmallInt) ; cdecl;                  // (S)V A: $1
    procedure setfilter1nomatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter2data(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter2domatch(value : boolean) ; cdecl;                       // (Z)V A: $1
    procedure setfilter2mask(value : TJavaArray<Byte>) ; cdecl;                 // ([B)V A: $1
    procedure setfilter2maskbank(value : JENUM_MEMORY_BANK) ; cdecl;            // (Lcom/zebra/ASCII_SDK/ENUM_MEMORY_BANK;)V A: $1
    procedure setfilter2maskstartpos(value : SmallInt) ; cdecl;                 // (S)V A: $1
    procedure setfilter2matchlength(value : SmallInt) ; cdecl;                  // (S)V A: $1
    procedure setfilter2nomatch(value : boolean) ; cdecl;                       // (Z)V A: $1
  end;

  TJParam_Accesscriteria = class(TJavaGenericImport<JParam_AccesscriteriaClass, JParam_Accesscriteria>)
  end;

const
  TJParam_AccesscriteriacommandName = 'Accesscriteria';

implementation

end.
