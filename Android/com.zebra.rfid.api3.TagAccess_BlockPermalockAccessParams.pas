//
// Generated by JavaToPas v1.5 20170214 - 172225
////////////////////////////////////////////////////////////////////////////////
unit com.zebra.rfid.api3.TagAccess_BlockPermalockAccessParams;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  com.zebra.rfid.api3.MEMORY_BANK,
  com.zebra.rfid.api3.Impinj;

type
  JTagAccess_BlockPermalockAccessParams = interface;

  JTagAccess_BlockPermalockAccessParamsClass = interface(JObjectClass)
    ['{491BADB2-59DA-43F6-9ADD-D7B8459E04C2}']
    function getAccessPassword : Int64; cdecl;                                  // ()J A: $1
    function getByteCount : Integer; cdecl;                                     // ()I A: $1
    function getByteOffset : Integer; cdecl;                                    // ()I A: $1
    function getMask : TJavaArray<Byte>; cdecl;                                 // ()[B A: $1
    function getMaskLength : Integer; cdecl;                                    // ()I A: $1
    function getMemoryBank : JMEMORY_BANK; cdecl;                               // ()Lcom/zebra/rfid/api3/MEMORY_BANK; A: $1
    function getReadLock : boolean; cdecl;                                      // ()Z A: $1
    function init(JTagAccessparam0 : JTagAccess) : JTagAccess_BlockPermalockAccessParams; cdecl; overload;// (Lcom/zebra/rfid/api3/TagAccess;)V A: $1
    function init(m_eMemoryBank : JMEMORY_BANK; m_bReadLock : boolean; m_nByteOffset : Integer; m_nByteCount : Integer; m_nAccessPassword : Int64; m_nMaskLength : Integer; m_pMask : TJavaArray<Byte>) : JTagAccess_BlockPermalockAccessParams; cdecl; overload;// (Lcom/zebra/rfid/api3/TagAccess;Lcom/zebra/rfid/api3/MEMORY_BANK;ZIIJI[B)V A: $1
    procedure setAccessPassword(accessPassword : Int64) ; cdecl;                // (J)V A: $1
    procedure setByteCount(byteCount : Integer) ; cdecl;                        // (I)V A: $1
    procedure setByteOffset(byteOffset : Integer) ; cdecl;                      // (I)V A: $1
    procedure setMask(mask : TJavaArray<Byte>) ; cdecl;                         // ([B)V A: $1
    procedure setMaskLength(maskLength : Integer) ; cdecl;                      // (I)V A: $1
    procedure setMemoryBank(memoryBank : JMEMORY_BANK) ; cdecl;                 // (Lcom/zebra/rfid/api3/MEMORY_BANK;)V A: $1
    procedure setReadLock(readLock : boolean) ; cdecl;                          // (Z)V A: $1
  end;

  [JavaSignature('com/zebra/rfid/api3/TagAccess_BlockPermalockAccessParams')]
  JTagAccess_BlockPermalockAccessParams = interface(JObject)
    ['{D2FE1336-C452-48EA-BB39-858837238EC9}']
    function getAccessPassword : Int64; cdecl;                                  // ()J A: $1
    function getByteCount : Integer; cdecl;                                     // ()I A: $1
    function getByteOffset : Integer; cdecl;                                    // ()I A: $1
    function getMask : TJavaArray<Byte>; cdecl;                                 // ()[B A: $1
    function getMaskLength : Integer; cdecl;                                    // ()I A: $1
    function getMemoryBank : JMEMORY_BANK; cdecl;                               // ()Lcom/zebra/rfid/api3/MEMORY_BANK; A: $1
    function getReadLock : boolean; cdecl;                                      // ()Z A: $1
    procedure setAccessPassword(accessPassword : Int64) ; cdecl;                // (J)V A: $1
    procedure setByteCount(byteCount : Integer) ; cdecl;                        // (I)V A: $1
    procedure setByteOffset(byteOffset : Integer) ; cdecl;                      // (I)V A: $1
    procedure setMask(mask : TJavaArray<Byte>) ; cdecl;                         // ([B)V A: $1
    procedure setMaskLength(maskLength : Integer) ; cdecl;                      // (I)V A: $1
    procedure setMemoryBank(memoryBank : JMEMORY_BANK) ; cdecl;                 // (Lcom/zebra/rfid/api3/MEMORY_BANK;)V A: $1
    procedure setReadLock(readLock : boolean) ; cdecl;                          // (Z)V A: $1
  end;

  TJTagAccess_BlockPermalockAccessParams = class(TJavaGenericImport<JTagAccess_BlockPermalockAccessParamsClass, JTagAccess_BlockPermalockAccessParams>)
  end;

implementation

end.
